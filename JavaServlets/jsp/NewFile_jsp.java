/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.32
 * Generated at: 2018-08-07 11:14:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.lang.ProcessBuilder.Redirect;
import org.eclipse.jdt.internal.compiler.batch.Main;
import java.sql.*;
import managers.DatabaseManager;
import storage.WCB;
import storage.ORM;
import models.data.*;
import library.models.data.User;
import managers.NetworkManager;
import java.io.*;
import javax.servlet.jsp.tagext.TryCatchFinally;

public final class NewFile_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("models.data");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.lang.ProcessBuilder.Redirect");
    _jspx_imports_classes.add("storage.WCB");
    _jspx_imports_classes.add("library.models.data.User");
    _jspx_imports_classes.add("managers.NetworkManager");
    _jspx_imports_classes.add("org.eclipse.jdt.internal.compiler.batch.Main");
    _jspx_imports_classes.add("managers.DatabaseManager");
    _jspx_imports_classes.add("storage.ORM");
    _jspx_imports_classes.add("javax.servlet.jsp.tagext.TryCatchFinally");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<link href=\"Styles/ButtonStyle.css\" rel=\"stylesheet\">\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("table, th, td {\r\n");
      out.write("\tborder: 1px solid black;\r\n");
      out.write("\tborder-collapse: collapse;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("th, td {\r\n");
      out.write("\tpadding: 5px;\r\n");
      out.write("\ttext-align: left;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title></title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div>\r\n");
      out.write("\t\t<form method=\"post\" action=\"NewFile.jsp\">\r\n");
      out.write("\t\t\t<table style=\"width: %\">\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>MasterAccount:</th>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"text\" name=\"account\" size=\"50\"></td>\r\n");
      out.write("\t\t\t\t\t<td rowspan=\"2\"><input class=\"myButton\" type=\"submit\"\r\n");
      out.write("\t\t\t\t\t\tvalue=\"Login\" />\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>MasterPassword:</th>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"text\" name=\"pass\" size=\"50\"></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t\t");

				Object pass = request.getParameter("pass");
				out.println(pass);
				if (pass != null) {
					try {
						/* Create string of connection url within specified format with machine name, 
						port number and database name. Here machine name id localhost and 
						database name is usermaster. */
						String connectionURL = "jdbc:mysql://localhost:3306/piraty_chat_client";

						// declare a connection by using Connection interface 
						Connection connection = null;

						//ï¿½Load JBBC driver "com.mysql.jdbc.Driver" 
						Class.forName("com.mysql.jdbc.Driver").newInstance();

						/* Create a connection by using getConnection() method that takes parameters of 
						string type connection url, user name and password to connect to database. */
						connection = DriverManager.getConnection(connectionURL, "root", "");
						out.println("Successfully connected to " + "MySQL server using TCP/IP...");
						connection.close();
					} catch (Exception ex) {
						out.println("Unable to connect to database.");
					}

					DatabaseManager databaseManager = DatabaseManager.getInstance();
					NetworkManager networkManager = new NetworkManager();
					networkManager.startConnectionThread(3000);

					MasterUser master = ORM.selectMasterUser(request.getParameter("account"));
					out.println(master.getPasswordHash());
					if (request.getParameter("pass").equals(master.getPasswordHash())) {
			
      out.write("\r\n");
      out.write("\t\t\t<font size=\"+2\" color=\"green\"></b> ");

 	out.println("Successful login!");
 	Thread.sleep(2000);
 	String redirectURL = "http://localhost:8080/goshoweb/masterIndex.jsp";
 	response.sendRedirect(redirectURL);
 		} else {
 
      out.write(" </font> <font size=\"+2\" color=\"red\"> ");

 	out.println("Wrong pass!");
 			Thread.sleep(3000);
 			//String referer = request.getHeader("Referer");
 		}
 	}
 
      out.write("\r\n");
      out.write("\t\t\t</font>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
